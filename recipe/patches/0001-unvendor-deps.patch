From 7049ee5a2dd94b2c9fd9b7bd50aca48eba989aa0 Mon Sep 17 00:00:00 2001
From: Jean-Christophe Morin <jcmorin@anaconda.com>
Date: Tue, 16 Jan 2024 18:20:44 -0500
Subject: [PATCH] Unvendor dependencies

---
 CMakeLists.txt       |  5 ++--
 cmake/protobuf.cmake | 62 +++++---------------------------------------
 cmake/tenseal.cmake  | 10 ++++---
 cmake/tests.cmake    |  9 ++-----
 4 files changed, 16 insertions(+), 70 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 92f4c72..6da61fd 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -14,9 +14,8 @@ if(WIN32)
   set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
 endif()
 
-include(cmake/seal.cmake)
+find_package(seal REQUIRED)
 include(cmake/protobuf.cmake)
-include(cmake/pybind11.cmake)
-include(cmake/xtensor.cmake)
+find_package(pybind11 REQUIRED)
 include(cmake/tenseal.cmake)
 include(cmake/tests.cmake)
diff --git a/cmake/protobuf.cmake b/cmake/protobuf.cmake
index 2f1517c..30be9fb 100644
--- a/cmake/protobuf.cmake
+++ b/cmake/protobuf.cmake
@@ -1,54 +1,5 @@
-include(FetchContent)
-
-set(Protobuf_USE_STATIC_LIBS ON)
-set(Protobuf_MSVC_STATIC_RUNTIME OFF)
-
-FetchContent_Declare(
-  protocolbuffers_protobuf
-  GIT_REPOSITORY https://github.com/protocolbuffers/protobuf
-  GIT_TAG        v3.15.8
-)
-FetchContent_MakeAvailable(protocolbuffers_protobuf)
-
-set(Protobuf_ROOT ${protocolbuffers_protobuf_SOURCE_DIR}/cmake)
-set(Protobuf_DIR ${Protobuf_ROOT}/${CMAKE_INSTALL_LIBDIR}/cmake/protobuf)
-
-message(STATUS "Setting up protobuf ...")
-execute_process(
-  COMMAND
-    ${CMAKE_COMMAND} -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -D protobuf_BUILD_TESTS=OFF -D protobuf_BUILD_PROTOC_BINARIES=ON -D CMAKE_POSITION_INDEPENDENT_CODE=ON -G "${CMAKE_GENERATOR}" .
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${Protobuf_ROOT})
-if(result)
-  message(FATAL_ERROR "Failed to download protobuf (${result})!")
-endif()
-
-message(STATUS "Building protobuf ...")
-execute_process(
-  COMMAND ${CMAKE_COMMAND} --build .
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${Protobuf_ROOT})
-if(result)
-  message(FATAL_ERROR "Failed to build protobuf (${result})!")
-endif()
-
-message(STATUS "Installing protobuf ...")
-if(WIN32)
-    execute_process(
-        COMMAND ${CMAKE_COMMAND} --build . --target install --config ${CMAKE_BUILD_TYPE}
-    RESULT_VARIABLE result
-    WORKING_DIRECTORY ${Protobuf_ROOT})
-    if(result)
-        message(FATAL_ERROR "Failed to build protobuf (${result})!")
-    endif()
-endif()
-
-find_package(Protobuf REQUIRED HINTS ${Protobuf_DIR})
-
-include(${Protobuf_DIR}/protobuf-config.cmake)
-include(${Protobuf_DIR}/protobuf-module.cmake)
-include(${Protobuf_DIR}/protobuf-options.cmake)
-include(${Protobuf_DIR}/protobuf-targets.cmake)
+find_package(Protobuf REQUIRED)
+find_program(protoc protoc REQUIRED)
 
 if(Protobuf_FOUND)
   message(STATUS "Protobuf version : ${Protobuf_VERSION}")
@@ -69,12 +20,11 @@ include_directories(${Protobuf_INCLUDE_DIRS})
 set(PROTO_ROOT ${CMAKE_SOURCE_DIR}/tenseal/proto)
 
 execute_process(
-  COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${PROTO_ROOT}/
+  COMMAND ${protoc} --proto_path=${PROTO_ROOT}/
           --cpp_out=${PROTO_ROOT}/ ${PROTO_ROOT}/tensealcontext.proto
-  COMMAND ${Protobuf_PROTOC_EXECUTABLE} --proto_path=${PROTO_ROOT}/
+  COMMAND ${protoc} --proto_path=${PROTO_ROOT}/
           --cpp_out=${PROTO_ROOT}/ ${PROTO_ROOT}/tensors.proto
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${Protobuf_ROOT})
+  RESULT_VARIABLE result)
 if(result)
   message(FATAL_ERROR "Failed to install protobuf (${result})!")
 endif()
@@ -84,4 +34,4 @@ set(PROTO_SOURCES ${PROTO_ROOT}/tensealcontext.pb.cc
                   ${PROTO_ROOT}/tensors.pb.cc)
 
 add_library(tenseal_proto ${PROTO_SOURCES})
-target_link_libraries(tenseal_proto INTERFACE ${Protobuf_LIBRARIES})
+target_link_libraries(tenseal_proto INTERFACE Protobuf)
diff --git a/cmake/tenseal.cmake b/cmake/tenseal.cmake
index 86a9210..3a83eb3 100644
--- a/cmake/tenseal.cmake
+++ b/cmake/tenseal.cmake
@@ -24,10 +24,12 @@ set(SOURCES
 add_library(tenseal SHARED ${SOURCES})
 pybind11_add_module(_tenseal_cpp ${SEALAPI_SOURCES} ${SOURCES} ${TENSEAL_BASEDIR}/binding.cpp)
 
-target_include_directories(_tenseal_cpp PUBLIC ${com_xtensorstack_xtensor_INCLUDE_DIRS})
+find_package(xtensor REQUIRED)
 
-target_link_libraries(_sealapi_cpp PRIVATE seal)
-target_link_libraries(_tenseal_cpp PRIVATE seal xtensor)
-target_link_libraries(tenseal PRIVATE seal xtensor)
+target_include_directories(_tenseal_cpp PUBLIC xtensor)
+
+target_link_libraries(_sealapi_cpp PRIVATE SEAL::seal)
+target_link_libraries(_tenseal_cpp PRIVATE SEAL::seal xtensor)
+target_link_libraries(tenseal PRIVATE SEAL::seal xtensor)
 target_link_libraries(tenseal PRIVATE tenseal_proto)
 target_link_libraries(_tenseal_cpp PRIVATE tenseal_proto)
diff --git a/cmake/tests.cmake b/cmake/tests.cmake
index f4ae510..360a175 100644
--- a/cmake/tests.cmake
+++ b/cmake/tests.cmake
@@ -1,10 +1,5 @@
 if(${BUILD_TEST})
-  FetchContent_Declare(
-      googletest
-      GIT_REPOSITORY https://github.com/google/googletest.git
-      GIT_TAG        release-1.12.1
-  )
-  FetchContent_MakeAvailable(googletest)
+  find_package(gtest REQUIRED)
 
   enable_testing()
   include_directories(${googletest_SOURCE_DIR}/include ${googletest_SOURCE_DIR}
@@ -19,7 +14,7 @@ if(${BUILD_TEST})
       ${TENSEAL_TESTS_BASEDIR}/tensors/bfvvector_test.cpp
       ${TENSEAL_TESTS_BASEDIR}/tensors/bfvtensor_test.cpp)
   add_executable(tenseal_tests ${TESTING_SOURCES} ${SOURCES})
-  target_link_libraries(tenseal_tests PRIVATE gtest gtest_main seal)
+  target_link_libraries(tenseal_tests PRIVATE gtest::gtest gtest::gtest_main seal)
   target_link_libraries(tenseal_tests PRIVATE tenseal tenseal_proto)
   add_test(tenseal_tests tenseal_tests)
 endif()
-- 
2.43.0

